{
	"name": "EmbeddingConversion",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SplitEmbeddings",
						"type": "DatasetReference"
					},
					"name": "RawSplitEmbedding"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ProcessedEmbeddings",
						"type": "DatasetReference"
					},
					"name": "ProcessedEmbeddings"
				}
			],
			"transformations": [
				{
					"name": "SelectIDAndModel"
				},
				{
					"name": "AddVectorColumn"
				},
				{
					"name": "AggregateByVector"
				},
				{
					"name": "RemoveAggregationColumn"
				},
				{
					"name": "ConvertStringToList"
				}
			],
			"scriptLines": [
				"parameters{",
				"     fileName as string",
				"}",
				"source(output(",
				"          corpusid as string,",
				"          model as string,",
				"          updated as string,",
				"          vector as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:[($fileName)]) ~> RawSplitEmbedding",
				"RawSplitEmbedding select(mapColumn(",
				"          id = corpusid,",
				"          values = vector",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectIDAndModel",
				"ConvertStringToList derive(vectors = \"vectors\") ~> AddVectorColumn",
				"AddVectorColumn aggregate(groupBy(vectors),",
				"     new_vector = collect(@(id=id, values=values))) ~> AggregateByVector",
				"AggregateByVector select(mapColumn(",
				"          vectors = new_vector",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveAggregationColumn",
				"SelectIDAndModel derive(values = map(split(dropRight(dropLeft(values, 1), 1), \",\"), toDouble(trim(#item)))) ~> ConvertStringToList",
				"RemoveAggregationColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['embeddings[n].json'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> ProcessedEmbeddings"
			]
		}
	}
}